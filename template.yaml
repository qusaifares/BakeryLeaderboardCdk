Resources:
  BakeryLeaderboardPipelineSecret5C127160:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString: {}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipelineSecret/Resource
  PipelineProjectRoleA63EF27D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/PipelineProject/Role/Resource
  PipelineProjectRoleDefaultPolicy9E9CBC9E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - arn:aws:logs:us-east-2:789658303834:log-group:/aws/codebuild/
                    - Ref: PipelineProjectDFFBB324
                    - :*
              - Fn::Join:
                  - ""
                  - - arn:aws:logs:us-east-2:789658303834:log-group:/aws/codebuild/
                    - Ref: PipelineProjectDFFBB324
          - Action:
              - codebuild:BatchPutCodeCoverages
              - codebuild:BatchPutTestCases
              - codebuild:CreateReport
              - codebuild:CreateReportGroup
              - codebuild:UpdateReport
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - arn:aws:codebuild:us-east-2:789658303834:report-group/
                  - Ref: PipelineProjectDFFBB324
                  - -*
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BakeryLeaderboardPipelineArtifactsBucketEncryptionKeyF88ED53E
                - Arn
        Version: "2012-10-17"
      PolicyName: PipelineProjectRoleDefaultPolicy9E9CBC9E
      Roles:
        - Ref: PipelineProjectRoleA63EF27D
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/PipelineProject/Role/DefaultPolicy/Resource
  PipelineProjectDFFBB324:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE
      EncryptionKey:
        Fn::GetAtt:
          - BakeryLeaderboardPipelineArtifactsBucketEncryptionKeyF88ED53E
          - Arn
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - PipelineProjectRoleA63EF27D
          - Arn
      Source:
        BuildSpec: ../../../buildspec.yaml
        Type: CODEPIPELINE
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/PipelineProject/Resource
  BakeryLeaderboardPipelineArtifactsBucketEncryptionKeyF88ED53E:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::789658303834:root
            Resource: "*"
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/ArtifactsBucketEncryptionKey/Resource
  BakeryLeaderboardPipelineArtifactsBucketEncryptionKeyAlias0D77A6E7:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/codepipeline-bakeryleaderboardstack-bakeryleaderboardpipeline-093339fb
      TargetKeyId:
        Fn::GetAtt:
          - BakeryLeaderboardPipelineArtifactsBucketEncryptionKeyF88ED53E
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/ArtifactsBucketEncryptionKeyAlias/Resource
  BakeryLeaderboardPipelineArtifactsBucketB77880EE:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:
                Fn::GetAtt:
                  - BakeryLeaderboardPipelineArtifactsBucketEncryptionKeyF88ED53E
                  - Arn
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/ArtifactsBucket/Resource
  BakeryLeaderboardPipelineArtifactsBucketPolicyA4F11D3C:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: BakeryLeaderboardPipelineArtifactsBucketB77880EE
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/ArtifactsBucket/Policy/Resource
  BakeryLeaderboardPipelineRole6967F23C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/Role/Resource
  BakeryLeaderboardPipelineRoleDefaultPolicyB015AEF6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BakeryLeaderboardPipelineArtifactsBucketEncryptionKeyF88ED53E
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BakeryLeaderboardPipelineApprovalManualApprovalCodePipelineActionRole99CF799E
                  - Arn
              - Fn::GetAtt:
                  - BakeryLeaderboardPipelineBuildCodePipelineActionRoleAA7C2E3A
                  - Arn
              - Fn::GetAtt:
                  - BakeryLeaderboardPipelineDeployToProdCFNDeployProdCodePipelineActionRole43DE974E
                  - Arn
              - Fn::GetAtt:
                  - BakeryLeaderboardPipelineDeployToTestCFNDeployTestCodePipelineActionRoleCBD76EFF
                  - Arn
        Version: "2012-10-17"
      PolicyName: BakeryLeaderboardPipelineRoleDefaultPolicyB015AEF6
      Roles:
        - Ref: BakeryLeaderboardPipelineRole6967F23C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/Role/DefaultPolicy/Resource
  BakeryLeaderboardPipeline25AA9A43:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        EncryptionKey:
          Id:
            Fn::GetAtt:
              - BakeryLeaderboardPipelineArtifactsBucketEncryptionKeyF88ED53E
              - Arn
          Type: KMS
        Location:
          Ref: BakeryLeaderboardPipelineArtifactsBucketB77880EE
        Type: S3
      Name: BakeryLeaderboardPipeline
      RestartExecutionOnUpdate: true
      RoleArn:
        Fn::GetAtt:
          - BakeryLeaderboardPipelineRole6967F23C
          - Arn
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Owner: qusaifares
                Repo: BakeryLeaderboardCdk
                Branch: main
                OAuthToken:
                  Fn::Join:
                    - ""
                    - - "{{resolve:secretsmanager:"
                      - Ref: BakeryLeaderboardPipelineSecret5C127160
                      - :SecretString:githubToken::}}
                PollForSourceChanges: false
              Name: GitHub_Source
              OutputArtifacts:
                - Name: Artifact_Source_GitHub_Source
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: PipelineProjectDFFBB324
              InputArtifacts:
                - Name: Artifact_Source_GitHub_Source
              Name: Build
              OutputArtifacts:
                - Name: Artifact_Build_Build
              RoleArn:
                Fn::GetAtt:
                  - BakeryLeaderboardPipelineBuildCodePipelineActionRoleAA7C2E3A
                  - Arn
              RunOrder: 1
          Name: Build
        - Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                StackName: LambdaStack-Test
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::GetAtt:
                    - BakeryLeaderboardPipelineDeployToTestCFNDeployTestRole72AEBF97
                    - Arn
                ActionMode: CREATE_UPDATE
                TemplatePath: Artifact_Build_Build::../../template.yaml
              InputArtifacts:
                - Name: Artifact_Build_Build
              Name: CFN_Deploy_Test
              RoleArn:
                Fn::GetAtt:
                  - BakeryLeaderboardPipelineDeployToTestCFNDeployTestCodePipelineActionRoleCBD76EFF
                  - Arn
              RunOrder: 1
          Name: DeployToTest
        - Actions:
            - ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"
              Configuration:
                CustomData: Approve or Reject this change to deploy to Production
              Name: ManualApproval
              RoleArn:
                Fn::GetAtt:
                  - BakeryLeaderboardPipelineApprovalManualApprovalCodePipelineActionRole99CF799E
                  - Arn
              RunOrder: 1
          Name: Approval
        - Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                StackName: LambdaStack-Prod
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::GetAtt:
                    - BakeryLeaderboardPipelineDeployToProdCFNDeployProdRole426249D2
                    - Arn
                ActionMode: CREATE_UPDATE
                TemplatePath: Artifact_Build_Build::../../template.yaml
              InputArtifacts:
                - Name: Artifact_Build_Build
              Name: CFN_Deploy_Prod
              RoleArn:
                Fn::GetAtt:
                  - BakeryLeaderboardPipelineDeployToProdCFNDeployProdCodePipelineActionRole43DE974E
                  - Arn
              RunOrder: 1
          Name: DeployToProd
    DependsOn:
      - BakeryLeaderboardPipelineRoleDefaultPolicyB015AEF6
      - BakeryLeaderboardPipelineRole6967F23C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/Resource
  BakeryLeaderboardPipelineSourceGitHubSourceWebhookResource53C49E97:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken:
          Fn::Join:
            - ""
            - - "{{resolve:secretsmanager:"
              - Ref: BakeryLeaderboardPipelineSecret5C127160
              - :SecretString:githubToken::}}
      Filters:
        - JsonPath: $.ref
          MatchEquals: refs/heads/{Branch}
      RegisterWithThirdParty: true
      TargetAction: GitHub_Source
      TargetPipeline:
        Ref: BakeryLeaderboardPipeline25AA9A43
      TargetPipelineVersion: 1
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/Source/GitHub_Source/WebhookResource
  BakeryLeaderboardPipelineBuildCodePipelineActionRoleAA7C2E3A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::789658303834:root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/Build/Build/CodePipelineActionRole/Resource
  BakeryLeaderboardPipelineBuildCodePipelineActionRoleDefaultPolicyD4529633:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineProjectDFFBB324
                - Arn
        Version: "2012-10-17"
      PolicyName: BakeryLeaderboardPipelineBuildCodePipelineActionRoleDefaultPolicyD4529633
      Roles:
        - Ref: BakeryLeaderboardPipelineBuildCodePipelineActionRoleAA7C2E3A
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/Build/Build/CodePipelineActionRole/DefaultPolicy/Resource
  BakeryLeaderboardPipelineDeployToTestCFNDeployTestCodePipelineActionRoleCBD76EFF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::789658303834:root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/DeployToTest/CFN_Deploy_Test/CodePipelineActionRole/Resource
  BakeryLeaderboardPipelineDeployToTestCFNDeployTestCodePipelineActionRoleDefaultPolicy97C921CF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BakeryLeaderboardPipelineDeployToTestCFNDeployTestRole72AEBF97
                - Arn
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BakeryLeaderboardPipelineArtifactsBucketEncryptionKeyF88ED53E
                - Arn
          - Action:
              - cloudformation:CreateStack
              - cloudformation:DescribeStack*
              - cloudformation:GetStackPolicy
              - cloudformation:GetTemplate*
              - cloudformation:SetStackPolicy
              - cloudformation:UpdateStack
              - cloudformation:ValidateTemplate
            Effect: Allow
            Resource: arn:aws:cloudformation:us-east-2:789658303834:stack/LambdaStack-Test/*
        Version: "2012-10-17"
      PolicyName: BakeryLeaderboardPipelineDeployToTestCFNDeployTestCodePipelineActionRoleDefaultPolicy97C921CF
      Roles:
        - Ref: BakeryLeaderboardPipelineDeployToTestCFNDeployTestCodePipelineActionRoleCBD76EFF
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/DeployToTest/CFN_Deploy_Test/CodePipelineActionRole/DefaultPolicy/Resource
  BakeryLeaderboardPipelineDeployToTestCFNDeployTestRole72AEBF97:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/DeployToTest/CFN_Deploy_Test/Role/Resource
  BakeryLeaderboardPipelineDeployToTestCFNDeployTestRoleDefaultPolicy0186F5E4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BakeryLeaderboardPipelineArtifactsBucketEncryptionKeyF88ED53E
                - Arn
          - Action: "*"
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BakeryLeaderboardPipelineDeployToTestCFNDeployTestRoleDefaultPolicy0186F5E4
      Roles:
        - Ref: BakeryLeaderboardPipelineDeployToTestCFNDeployTestRole72AEBF97
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/DeployToTest/CFN_Deploy_Test/Role/DefaultPolicy/Resource
  BakeryLeaderboardPipelineApprovalManualApprovalCodePipelineActionRole99CF799E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::789658303834:root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/Approval/ManualApproval/CodePipelineActionRole/Resource
  BakeryLeaderboardPipelineDeployToProdCFNDeployProdCodePipelineActionRole43DE974E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::789658303834:root
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/DeployToProd/CFN_Deploy_Prod/CodePipelineActionRole/Resource
  BakeryLeaderboardPipelineDeployToProdCFNDeployProdCodePipelineActionRoleDefaultPolicyC58FF0E2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BakeryLeaderboardPipelineDeployToProdCFNDeployProdRole426249D2
                - Arn
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BakeryLeaderboardPipelineArtifactsBucketEncryptionKeyF88ED53E
                - Arn
          - Action:
              - cloudformation:CreateStack
              - cloudformation:DescribeStack*
              - cloudformation:GetStackPolicy
              - cloudformation:GetTemplate*
              - cloudformation:SetStackPolicy
              - cloudformation:UpdateStack
              - cloudformation:ValidateTemplate
            Effect: Allow
            Resource: arn:aws:cloudformation:us-east-2:789658303834:stack/LambdaStack-Prod/*
        Version: "2012-10-17"
      PolicyName: BakeryLeaderboardPipelineDeployToProdCFNDeployProdCodePipelineActionRoleDefaultPolicyC58FF0E2
      Roles:
        - Ref: BakeryLeaderboardPipelineDeployToProdCFNDeployProdCodePipelineActionRole43DE974E
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/DeployToProd/CFN_Deploy_Prod/CodePipelineActionRole/DefaultPolicy/Resource
  BakeryLeaderboardPipelineDeployToProdCFNDeployProdRole426249D2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/DeployToProd/CFN_Deploy_Prod/Role/Resource
  BakeryLeaderboardPipelineDeployToProdCFNDeployProdRoleDefaultPolicyBB2615DE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BakeryLeaderboardPipelineArtifactsBucketB77880EE
                        - Arn
                    - /*
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BakeryLeaderboardPipelineArtifactsBucketEncryptionKeyF88ED53E
                - Arn
          - Action: "*"
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BakeryLeaderboardPipelineDeployToProdCFNDeployProdRoleDefaultPolicyBB2615DE
      Roles:
        - Ref: BakeryLeaderboardPipelineDeployToProdCFNDeployProdRole426249D2
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardPipeline/DeployToProd/CFN_Deploy_Prod/Role/DefaultPolicy/Resource
  MyVpcF9F0CA6F:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/Resource
  MyVpcPublicSubnet1SubnetF6608456:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2a
      CidrBlock: 10.0.0.0/19
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PublicSubnet1
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet1/Subnet
  MyVpcPublicSubnet1RouteTableC46AB2F4:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PublicSubnet1
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet1/RouteTable
  MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet1RouteTableC46AB2F4
      SubnetId:
        Ref: MyVpcPublicSubnet1SubnetF6608456
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet1/RouteTableAssociation
  MyVpcPublicSubnet1DefaultRoute95FDF9EB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW5C4A4F63
      RouteTableId:
        Ref: MyVpcPublicSubnet1RouteTableC46AB2F4
    DependsOn:
      - MyVpcVPCGW488ACE0D
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet1/DefaultRoute
  MyVpcPublicSubnet1EIP096967CB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet1/EIP
  MyVpcPublicSubnet1NATGatewayAD3400C1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet1EIP096967CB
          - AllocationId
      SubnetId:
        Ref: MyVpcPublicSubnet1SubnetF6608456
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PublicSubnet1
    DependsOn:
      - MyVpcPublicSubnet1DefaultRoute95FDF9EB
      - MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet1/NATGateway
  MyVpcPublicSubnet2Subnet492B6BFB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2b
      CidrBlock: 10.0.32.0/19
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PublicSubnet2
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet2/Subnet
  MyVpcPublicSubnet2RouteTable1DF17386:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PublicSubnet2
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet2/RouteTable
  MyVpcPublicSubnet2RouteTableAssociation227DE78D:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet2RouteTable1DF17386
      SubnetId:
        Ref: MyVpcPublicSubnet2Subnet492B6BFB
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet2/RouteTableAssociation
  MyVpcPublicSubnet2DefaultRoute052936F6:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW5C4A4F63
      RouteTableId:
        Ref: MyVpcPublicSubnet2RouteTable1DF17386
    DependsOn:
      - MyVpcVPCGW488ACE0D
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet2/DefaultRoute
  MyVpcPublicSubnet2EIP8CCBA239:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet2/EIP
  MyVpcPublicSubnet2NATGateway91BFBEC9:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet2EIP8CCBA239
          - AllocationId
      SubnetId:
        Ref: MyVpcPublicSubnet2Subnet492B6BFB
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PublicSubnet2
    DependsOn:
      - MyVpcPublicSubnet2DefaultRoute052936F6
      - MyVpcPublicSubnet2RouteTableAssociation227DE78D
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet2/NATGateway
  MyVpcPublicSubnet3Subnet57EEE236:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2c
      CidrBlock: 10.0.64.0/19
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PublicSubnet3
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet3/Subnet
  MyVpcPublicSubnet3RouteTable15028F08:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PublicSubnet3
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet3/RouteTable
  MyVpcPublicSubnet3RouteTableAssociation5C27DDA4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet3RouteTable15028F08
      SubnetId:
        Ref: MyVpcPublicSubnet3Subnet57EEE236
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet3/RouteTableAssociation
  MyVpcPublicSubnet3DefaultRoute3A83AB36:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW5C4A4F63
      RouteTableId:
        Ref: MyVpcPublicSubnet3RouteTable15028F08
    DependsOn:
      - MyVpcVPCGW488ACE0D
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet3/DefaultRoute
  MyVpcPublicSubnet3EIPC5ACADAB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PublicSubnet3
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet3/EIP
  MyVpcPublicSubnet3NATGatewayD4B50EBE:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet3EIPC5ACADAB
          - AllocationId
      SubnetId:
        Ref: MyVpcPublicSubnet3Subnet57EEE236
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PublicSubnet3
    DependsOn:
      - MyVpcPublicSubnet3DefaultRoute3A83AB36
      - MyVpcPublicSubnet3RouteTableAssociation5C27DDA4
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PublicSubnet3/NATGateway
  MyVpcPrivateSubnet1Subnet5057CF7E:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2a
      CidrBlock: 10.0.96.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PrivateSubnet1
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PrivateSubnet1/Subnet
  MyVpcPrivateSubnet1RouteTable8819E6E2:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PrivateSubnet1
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PrivateSubnet1/RouteTable
  MyVpcPrivateSubnet1RouteTableAssociation56D38C7E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet1RouteTable8819E6E2
      SubnetId:
        Ref: MyVpcPrivateSubnet1Subnet5057CF7E
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PrivateSubnet1/RouteTableAssociation
  MyVpcPrivateSubnet1DefaultRouteA8CDE2FA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet1NATGatewayAD3400C1
      RouteTableId:
        Ref: MyVpcPrivateSubnet1RouteTable8819E6E2
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PrivateSubnet1/DefaultRoute
  MyVpcPrivateSubnet2Subnet0040C983:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2b
      CidrBlock: 10.0.128.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PrivateSubnet2
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PrivateSubnet2/Subnet
  MyVpcPrivateSubnet2RouteTableCEDCEECE:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PrivateSubnet2
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PrivateSubnet2/RouteTable
  MyVpcPrivateSubnet2RouteTableAssociation86A610DA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet2RouteTableCEDCEECE
      SubnetId:
        Ref: MyVpcPrivateSubnet2Subnet0040C983
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PrivateSubnet2/RouteTableAssociation
  MyVpcPrivateSubnet2DefaultRoute9CE96294:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet2NATGateway91BFBEC9
      RouteTableId:
        Ref: MyVpcPrivateSubnet2RouteTableCEDCEECE
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PrivateSubnet2/DefaultRoute
  MyVpcPrivateSubnet3Subnet772D6AD7:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-2c
      CidrBlock: 10.0.160.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PrivateSubnet3
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PrivateSubnet3/Subnet
  MyVpcPrivateSubnet3RouteTableB790927C:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc/PrivateSubnet3
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PrivateSubnet3/RouteTable
  MyVpcPrivateSubnet3RouteTableAssociationD951741C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet3RouteTableB790927C
      SubnetId:
        Ref: MyVpcPrivateSubnet3Subnet772D6AD7
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PrivateSubnet3/RouteTableAssociation
  MyVpcPrivateSubnet3DefaultRouteEC11C0C5:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet3NATGatewayD4B50EBE
      RouteTableId:
        Ref: MyVpcPrivateSubnet3RouteTableB790927C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/PrivateSubnet3/DefaultRoute
  MyVpcIGW5C4A4F63:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/MyVpc
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/IGW
  MyVpcVPCGW488ACE0D:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: MyVpcIGW5C4A4F63
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/VPCGW
  MyVpcRestrictDefaultSecurityGroupCustomResourceA4FCCD62:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
          - Arn
      DefaultSecurityGroupId:
        Fn::GetAtt:
          - MyVpcF9F0CA6F
          - DefaultSecurityGroup
      Account: "789658303834"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MyVpc/RestrictDefaultSecurityGroupCustomResource/Default
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ""
                      - - arn:aws:ec2:us-east-2:789658303834:security-group/
                        - Fn::GetAtt:
                            - MyVpcF9F0CA6F
                            - DefaultSecurityGroup
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role
  CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-789658303834-us-east-2
        S3Key: 7f18a11296f35510ee16538afec983ed6312e12afbf81b777089a9f8e34e2474.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
          - Arn
      Runtime: nodejs18.x
      Description: Lambda function for removing all inbound/outbound rules from the VPC default security group
    DependsOn:
      - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler
      aws:asset:path: asset.7f18a11296f35510ee16538afec983ed6312e12afbf81b777089a9f8e34e2474
      aws:asset:property: Code
  RiotApiSecret70E7C139:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString: {}
      Name: RIOT_API
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/RiotApiSecret/Resource
  Ec2SecurityGroup55889913:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for EC2 instance
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 24.17.176.100/32
          Description: Allow SSH access from my IP
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/Ec2SecurityGroup/Resource
  RdsSecurityGroup632A77E4:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow whitelisted IP to access port 5432
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/RdsSecurityGroup/Resource
  RdsSecurityGroupfromBakeryLeaderboardStackEc2SecurityGroupCBCADA0D5432FE156F9D:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow postgres traffic from EC2 SG
      FromPort: 5432
      GroupId:
        Fn::GetAtt:
          - RdsSecurityGroup632A77E4
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - Ec2SecurityGroup55889913
          - GroupId
      ToPort: 5432
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/RdsSecurityGroup/from BakeryLeaderboardStackEc2SecurityGroupCBCADA0D:5432
  RdsSecurityGroupfromBakeryLeaderboardStackSummonerSourceLambdaSecurityGroup4D121726IndirectPortAA6F8308:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from BakeryLeaderboardStackSummonerSourceLambdaSecurityGroup4D121726:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - BakeryLeaderboardDatabase5E4ABA2D
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - RdsSecurityGroup632A77E4
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - SummonerSourceLambdaSecurityGroup6F556347
          - GroupId
      ToPort:
        Fn::GetAtt:
          - BakeryLeaderboardDatabase5E4ABA2D
          - Endpoint.Port
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/RdsSecurityGroup/from BakeryLeaderboardStackSummonerSourceLambdaSecurityGroup4D121726:{IndirectPort}
  RdsSecurityGroupfromBakeryLeaderboardStackSourceMatchesLambdaSecurityGroup4D27F546IndirectPort2CCDCC24:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from BakeryLeaderboardStackSourceMatchesLambdaSecurityGroup4D27F546:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - BakeryLeaderboardDatabase5E4ABA2D
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - RdsSecurityGroup632A77E4
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - SourceMatchesLambdaSecurityGroup645571FC
          - GroupId
      ToPort:
        Fn::GetAtt:
          - BakeryLeaderboardDatabase5E4ABA2D
          - Endpoint.Port
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/RdsSecurityGroup/from BakeryLeaderboardStackSourceMatchesLambdaSecurityGroup4D27F546:{IndirectPort}
  RdsSecurityGroupfromBakeryLeaderboardStackCheckMatchExistenceLambdaSecurityGroup6E45D5B4IndirectPortFF5B30C4:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from BakeryLeaderboardStackCheckMatchExistenceLambdaSecurityGroup6E45D5B4:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - BakeryLeaderboardDatabase5E4ABA2D
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - RdsSecurityGroup632A77E4
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - CheckMatchExistenceLambdaSecurityGroup54D464E3
          - GroupId
      ToPort:
        Fn::GetAtt:
          - BakeryLeaderboardDatabase5E4ABA2D
          - Endpoint.Port
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/RdsSecurityGroup/from BakeryLeaderboardStackCheckMatchExistenceLambdaSecurityGroup6E45D5B4:{IndirectPort}
  RdsSecurityGroupfromBakeryLeaderboardStackFetchAndInsertMatchDataLambdaSecurityGroup3F9929FBIndirectPortF05CC9F0:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from BakeryLeaderboardStackFetchAndInsertMatchDataLambdaSecurityGroup3F9929FB:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - BakeryLeaderboardDatabase5E4ABA2D
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - RdsSecurityGroup632A77E4
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - FetchAndInsertMatchDataLambdaSecurityGroup0D057C87
          - GroupId
      ToPort:
        Fn::GetAtt:
          - BakeryLeaderboardDatabase5E4ABA2D
          - Endpoint.Port
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/RdsSecurityGroup/from BakeryLeaderboardStackFetchAndInsertMatchDataLambdaSecurityGroup3F9929FB:{IndirectPort}
  RdsSecurityGroupfromBakeryLeaderboardStackSyncSummonerStatsLambdaSecurityGroup6B02BBB6IndirectPortB221D0FC:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from BakeryLeaderboardStackSyncSummonerStatsLambdaSecurityGroup6B02BBB6:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - BakeryLeaderboardDatabase5E4ABA2D
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - RdsSecurityGroup632A77E4
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - SyncSummonerStatsLambdaSecurityGroupE0C0B440
          - GroupId
      ToPort:
        Fn::GetAtt:
          - BakeryLeaderboardDatabase5E4ABA2D
          - Endpoint.Port
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/RdsSecurityGroup/from BakeryLeaderboardStackSyncSummonerStatsLambdaSecurityGroup6B02BBB6:{IndirectPort}
  RdsSecurityGroupfromBakeryLeaderboardStackSyncSummonerStatsFromScratchLambdaSecurityGroup7B0EF880IndirectPort549610F3:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from BakeryLeaderboardStackSyncSummonerStatsFromScratchLambdaSecurityGroup7B0EF880:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - BakeryLeaderboardDatabase5E4ABA2D
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - RdsSecurityGroup632A77E4
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - SyncSummonerStatsFromScratchLambdaSecurityGroupE28C328B
          - GroupId
      ToPort:
        Fn::GetAtt:
          - BakeryLeaderboardDatabase5E4ABA2D
          - Endpoint.Port
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/RdsSecurityGroup/from BakeryLeaderboardStackSyncSummonerStatsFromScratchLambdaSecurityGroup7B0EF880:{IndirectPort}
  DatabaseProxyInstanceInstanceRole7AC61EFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/DatabaseProxyInstance
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/DatabaseProxyInstance/InstanceRole/Resource
  DatabaseProxyInstanceInstanceProfile0DA2E8B3:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: DatabaseProxyInstanceInstanceRole7AC61EFB
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/DatabaseProxyInstance/InstanceProfile
  DatabaseProxyInstance13AE1AF4:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: us-east-2a
      IamInstanceProfile:
        Ref: DatabaseProxyInstanceInstanceProfile0DA2E8B3
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.micro
      KeyName: qusai-us-east-2
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet:
            - Fn::GetAtt:
                - Ec2SecurityGroup55889913
                - GroupId
          SubnetId:
            Ref: MyVpcPublicSubnet1SubnetF6608456
      Tags:
        - Key: Name
          Value: BakeryLeaderboardStack/DatabaseProxyInstance
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - DatabaseProxyInstanceInstanceRole7AC61EFB
      - MyVpcPublicSubnet1DefaultRoute95FDF9EB
      - MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB
      - MyVpcPublicSubnet2DefaultRoute052936F6
      - MyVpcPublicSubnet2RouteTableAssociation227DE78D
      - MyVpcPublicSubnet3DefaultRoute3A83AB36
      - MyVpcPublicSubnet3RouteTableAssociation5C27DDA4
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/DatabaseProxyInstance/Resource
  BakeryLeaderboardDatabaseSubnets5964FAE1:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for BakeryLeaderboardDatabase database
      SubnetIds:
        - Ref: MyVpcPrivateSubnet1Subnet5057CF7E
        - Ref: MyVpcPrivateSubnet2Subnet0040C983
        - Ref: MyVpcPrivateSubnet3Subnet772D6AD7
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardDatabase/Subnets/Default
  BakeryLeaderboardStackBakeryLeaderboardDatabaseSecretAD78CD053fdaad7efa858a3daf9490cf0a702aeb:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"qusai"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardDatabase/Secret/Resource
  BakeryLeaderboardDatabaseSecretAttachment2E68FFA9:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: BakeryLeaderboardStackBakeryLeaderboardDatabaseSecretAD78CD053fdaad7efa858a3daf9490cf0a702aeb
      TargetId:
        Ref: BakeryLeaderboardDatabase5E4ABA2D
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardDatabase/Secret/Attachment/Resource
  BakeryLeaderboardDatabase5E4ABA2D:
    Type: AWS::RDS::DBCluster
    Properties:
      CopyTagsToSnapshot: true
      DBClusterParameterGroupName: default.aurora-postgresql15
      DBSubnetGroupName:
        Ref: BakeryLeaderboardDatabaseSubnets5964FAE1
      DatabaseName: BakeryLeaderboard
      Engine: aurora-postgresql
      EngineVersion: "15.3"
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: BakeryLeaderboardStackBakeryLeaderboardDatabaseSecretAD78CD053fdaad7efa858a3daf9490cf0a702aeb
            - :SecretString:password::}}
      MasterUsername: qusai
      Port: 5432
      ServerlessV2ScalingConfiguration:
        MaxCapacity: 2
        MinCapacity: 0.5
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - RdsSecurityGroup632A77E4
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardDatabase/Resource
  BakeryLeaderboardDatabaseWriter43665195:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier:
        Ref: BakeryLeaderboardDatabase5E4ABA2D
      DBInstanceClass: db.t3.medium
      Engine: aurora-postgresql
      PromotionTier: 0
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardDatabase/Writer/Resource
  BakeryLeaderboardDatabaseReader14BA73FFF:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier:
        Ref: BakeryLeaderboardDatabase5E4ABA2D
      DBInstanceClass: db.serverless
      Engine: aurora-postgresql
      PromotionTier: 1
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/BakeryLeaderboardDatabase/Reader1/Resource
  SummonerSourceLambdaServiceRole063D76E3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SummonerSourceLambda/ServiceRole/Resource
  SummonerSourceLambdaServiceRoleDefaultPolicy59A69252:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              - Ref: BakeryLeaderboardDatabaseSecretAttachment2E68FFA9
              - Ref: RiotApiSecret70E7C139
        Version: "2012-10-17"
      PolicyName: SummonerSourceLambdaServiceRoleDefaultPolicy59A69252
      Roles:
        - Ref: SummonerSourceLambdaServiceRole063D76E3
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SummonerSourceLambda/ServiceRole/DefaultPolicy/Resource
  SummonerSourceLambdaSecurityGroup6F556347:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function BakeryLeaderboardStackSummonerSourceLambdaA739A95C
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyVpcF9F0CA6F
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SummonerSourceLambda/SecurityGroup/Resource
  SummonerSourceLambdaEA9E4A38:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-789658303834-us-east-2
        S3Key: 0bffb68644fe0f1a55ff141c843589482a89a60180e9632d0ffd5dd0b2d35127.zip
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          RIOT_API_SECRET:
            Ref: RiotApiSecret70E7C139
          DB_SECRET:
            Ref: BakeryLeaderboardDatabaseSecretAttachment2E68FFA9
          NODE_ENV: development
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - SummonerSourceLambdaServiceRole063D76E3
          - Arn
      Runtime: nodejs18.x
      Timeout: 15
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - SummonerSourceLambdaSecurityGroup6F556347
              - GroupId
        SubnetIds:
          - Ref: MyVpcPrivateSubnet1Subnet5057CF7E
          - Ref: MyVpcPrivateSubnet2Subnet0040C983
          - Ref: MyVpcPrivateSubnet3Subnet772D6AD7
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
      - SummonerSourceLambdaServiceRoleDefaultPolicy59A69252
      - SummonerSourceLambdaServiceRole063D76E3
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SummonerSourceLambda/Resource
      aws:asset:path: asset.0bffb68644fe0f1a55ff141c843589482a89a60180e9632d0ffd5dd0b2d35127
      aws:asset:is-bundled: true
      aws:asset:property: Code
  SourceMatchesLambdaServiceRoleEF9474EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SourceMatchesLambda/ServiceRole/Resource
  SourceMatchesLambdaServiceRoleDefaultPolicyE9538FCB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:SendMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - SummonerMatchFetchRequestQueue322870BA
                - Arn
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: BakeryLeaderboardDatabaseSecretAttachment2E68FFA9
        Version: "2012-10-17"
      PolicyName: SourceMatchesLambdaServiceRoleDefaultPolicyE9538FCB
      Roles:
        - Ref: SourceMatchesLambdaServiceRoleEF9474EC
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SourceMatchesLambda/ServiceRole/DefaultPolicy/Resource
  SourceMatchesLambdaSecurityGroup645571FC:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function BakeryLeaderboardStackSourceMatchesLambda12AA7648
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyVpcF9F0CA6F
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SourceMatchesLambda/SecurityGroup/Resource
  SourceMatchesLambda341ADEAE:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-789658303834-us-east-2
        S3Key: ec726e7e547e3b509a84cd18b5df50a626397497bd4cf47e682e2530ab6b7a4f.zip
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          SUMMONER_MATCH_FETCH_REQUEST_QUEUE_URL:
            Ref: SummonerMatchFetchRequestQueue322870BA
          DB_SECRET:
            Ref: BakeryLeaderboardDatabaseSecretAttachment2E68FFA9
          NODE_ENV: development
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - SourceMatchesLambdaServiceRoleEF9474EC
          - Arn
      Runtime: nodejs18.x
      Timeout: 15
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - SourceMatchesLambdaSecurityGroup645571FC
              - GroupId
        SubnetIds:
          - Ref: MyVpcPrivateSubnet1Subnet5057CF7E
          - Ref: MyVpcPrivateSubnet2Subnet0040C983
          - Ref: MyVpcPrivateSubnet3Subnet772D6AD7
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
      - SourceMatchesLambdaServiceRoleDefaultPolicyE9538FCB
      - SourceMatchesLambdaServiceRoleEF9474EC
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SourceMatchesLambda/Resource
      aws:asset:path: asset.ec726e7e547e3b509a84cd18b5df50a626397497bd4cf47e682e2530ab6b7a4f
      aws:asset:is-bundled: true
      aws:asset:property: Code
  GetMatchIdsForSummonerLambdaServiceRoleF7735954:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/GetMatchIdsForSummonerLambda/ServiceRole/Resource
  GetMatchIdsForSummonerLambdaServiceRoleDefaultPolicy5453D721:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:SendMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - MatchIdProcessingQueueD3932FF5
                - Arn
          - Action:
              - sqs:ChangeMessageVisibility
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - SummonerMatchFetchRequestQueue322870BA
                - Arn
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: RiotApiSecret70E7C139
        Version: "2012-10-17"
      PolicyName: GetMatchIdsForSummonerLambdaServiceRoleDefaultPolicy5453D721
      Roles:
        - Ref: GetMatchIdsForSummonerLambdaServiceRoleF7735954
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/GetMatchIdsForSummonerLambda/ServiceRole/DefaultPolicy/Resource
  GetMatchIdsForSummonerLambdaSecurityGroupDF80B78C:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function BakeryLeaderboardStackGetMatchIdsForSummonerLambdaF6CA02D2
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyVpcF9F0CA6F
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/GetMatchIdsForSummonerLambda/SecurityGroup/Resource
  GetMatchIdsForSummonerLambda80435008:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-789658303834-us-east-2
        S3Key: 1ef7be0409fa576b4c392a3faf7a6962f0d3f7394b3c372e71b08ed1d3399741.zip
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          FETCH_MATCH_QUEUE_URL:
            Ref: MatchIdProcessingQueueD3932FF5
          RIOT_API_SECRET:
            Ref: RiotApiSecret70E7C139
          NODE_ENV: development
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - GetMatchIdsForSummonerLambdaServiceRoleF7735954
          - Arn
      Runtime: nodejs18.x
      Timeout: 15
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - GetMatchIdsForSummonerLambdaSecurityGroupDF80B78C
              - GroupId
        SubnetIds:
          - Ref: MyVpcPrivateSubnet1Subnet5057CF7E
          - Ref: MyVpcPrivateSubnet2Subnet0040C983
          - Ref: MyVpcPrivateSubnet3Subnet772D6AD7
    DependsOn:
      - GetMatchIdsForSummonerLambdaServiceRoleDefaultPolicy5453D721
      - GetMatchIdsForSummonerLambdaServiceRoleF7735954
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/GetMatchIdsForSummonerLambda/Resource
      aws:asset:path: asset.1ef7be0409fa576b4c392a3faf7a6962f0d3f7394b3c372e71b08ed1d3399741
      aws:asset:is-bundled: true
      aws:asset:property: Code
  GetMatchIdsForSummonerLambdaSqsEventSourceBakeryLeaderboardStackSummonerMatchFetchRequestQueue70C935A4E1C702A4:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn:
        Fn::GetAtt:
          - SummonerMatchFetchRequestQueue322870BA
          - Arn
      FunctionName:
        Ref: GetMatchIdsForSummonerLambda80435008
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/GetMatchIdsForSummonerLambda/SqsEventSource:BakeryLeaderboardStackSummonerMatchFetchRequestQueue70C935A4/Resource
  SummonerMatchFetchRequestDlq9AD35F4D:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 604800
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SummonerMatchFetchRequestDlq/Resource
  SummonerMatchFetchRequestQueue322870BA:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - SummonerMatchFetchRequestDlq9AD35F4D
            - Arn
        maxReceiveCount: 5
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SummonerMatchFetchRequestQueue/Resource
  MatchIdProcessingDlqDE9EAD22:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 604800
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MatchIdProcessingDlq/Resource
  MatchIdProcessingQueueD3932FF5:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - MatchIdProcessingDlqDE9EAD22
            - Arn
        maxReceiveCount: 5
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MatchIdProcessingQueue/Resource
  CheckMatchExistenceLambdaServiceRole09054865:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/CheckMatchExistenceLambda/ServiceRole/Resource
  CheckMatchExistenceLambdaServiceRoleDefaultPolicyD6CC7DAA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: BakeryLeaderboardDatabaseSecretAttachment2E68FFA9
        Version: "2012-10-17"
      PolicyName: CheckMatchExistenceLambdaServiceRoleDefaultPolicyD6CC7DAA
      Roles:
        - Ref: CheckMatchExistenceLambdaServiceRole09054865
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/CheckMatchExistenceLambda/ServiceRole/DefaultPolicy/Resource
  CheckMatchExistenceLambdaSecurityGroup54D464E3:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function BakeryLeaderboardStackCheckMatchExistenceLambda4638025B
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyVpcF9F0CA6F
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/CheckMatchExistenceLambda/SecurityGroup/Resource
  CheckMatchExistenceLambda17FD01AF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-789658303834-us-east-2
        S3Key: 9fcce78cd7e9641369a8837a58ff7bf231e28b2543b9e1dadb0daf57385a2ff3.zip
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          DB_SECRET:
            Ref: BakeryLeaderboardDatabaseSecretAttachment2E68FFA9
          NODE_ENV: development
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - CheckMatchExistenceLambdaServiceRole09054865
          - Arn
      Runtime: nodejs18.x
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - CheckMatchExistenceLambdaSecurityGroup54D464E3
              - GroupId
        SubnetIds:
          - Ref: MyVpcPrivateSubnet1Subnet5057CF7E
          - Ref: MyVpcPrivateSubnet2Subnet0040C983
          - Ref: MyVpcPrivateSubnet3Subnet772D6AD7
    DependsOn:
      - CheckMatchExistenceLambdaServiceRoleDefaultPolicyD6CC7DAA
      - CheckMatchExistenceLambdaServiceRole09054865
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/CheckMatchExistenceLambda/Resource
      aws:asset:path: asset.9fcce78cd7e9641369a8837a58ff7bf231e28b2543b9e1dadb0daf57385a2ff3
      aws:asset:is-bundled: true
      aws:asset:property: Code
  FetchAndInsertMatchDataLambdaServiceRoleF9BB2111:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/FetchAndInsertMatchDataLambda/ServiceRole/Resource
  FetchAndInsertMatchDataLambdaServiceRoleDefaultPolicyB6175855:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SyncSummonerStatsLambda5210D915
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SyncSummonerStatsLambda5210D915
                        - Arn
                    - :*
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              - Ref: BakeryLeaderboardDatabaseSecretAttachment2E68FFA9
              - Ref: RiotApiSecret70E7C139
        Version: "2012-10-17"
      PolicyName: FetchAndInsertMatchDataLambdaServiceRoleDefaultPolicyB6175855
      Roles:
        - Ref: FetchAndInsertMatchDataLambdaServiceRoleF9BB2111
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/FetchAndInsertMatchDataLambda/ServiceRole/DefaultPolicy/Resource
  FetchAndInsertMatchDataLambdaSecurityGroup0D057C87:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function BakeryLeaderboardStackFetchAndInsertMatchDataLambda2D181ED6
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyVpcF9F0CA6F
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/FetchAndInsertMatchDataLambda/SecurityGroup/Resource
  FetchAndInsertMatchDataLambda39A2EA66:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-789658303834-us-east-2
        S3Key: a29b9b27aa0bdc2b70c0f248af6fe18aadeb662f2825ccf2b2877982fcdc1bb6.zip
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          SYNC_SUMMONER_STATS_LAMBDA_ARN:
            Fn::GetAtt:
              - SyncSummonerStatsLambda5210D915
              - Arn
          RIOT_API_SECRET:
            Ref: RiotApiSecret70E7C139
          DB_SECRET:
            Ref: BakeryLeaderboardDatabaseSecretAttachment2E68FFA9
          NODE_ENV: development
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - FetchAndInsertMatchDataLambdaServiceRoleF9BB2111
          - Arn
      Runtime: nodejs18.x
      Timeout: 15
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - FetchAndInsertMatchDataLambdaSecurityGroup0D057C87
              - GroupId
        SubnetIds:
          - Ref: MyVpcPrivateSubnet1Subnet5057CF7E
          - Ref: MyVpcPrivateSubnet2Subnet0040C983
          - Ref: MyVpcPrivateSubnet3Subnet772D6AD7
    DependsOn:
      - FetchAndInsertMatchDataLambdaServiceRoleDefaultPolicyB6175855
      - FetchAndInsertMatchDataLambdaServiceRoleF9BB2111
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/FetchAndInsertMatchDataLambda/Resource
      aws:asset:path: asset.a29b9b27aa0bdc2b70c0f248af6fe18aadeb662f2825ccf2b2877982fcdc1bb6
      aws:asset:is-bundled: true
      aws:asset:property: Code
  MatchSourceStateMachineRoleD09F75E7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: states.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MatchSourceStateMachine/Role/Resource
  MatchSourceStateMachineRoleDefaultPolicy6394FA99:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - CheckMatchExistenceLambda17FD01AF
                  - Arn
              - Fn::GetAtt:
                  - FetchAndInsertMatchDataLambda39A2EA66
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - CheckMatchExistenceLambda17FD01AF
                        - Arn
                    - :*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - FetchAndInsertMatchDataLambda39A2EA66
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: MatchSourceStateMachineRoleDefaultPolicy6394FA99
      Roles:
        - Ref: MatchSourceStateMachineRoleD09F75E7
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MatchSourceStateMachine/Role/DefaultPolicy/Resource
  MatchSourceStateMachine95C9A812:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"CheckIfMatchExistsInvocation","States":{"CheckIfMatchExistsInvocation":{"Next":"DoesMatchExistChoice","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"IntervalSeconds":10,"MaxAttempts":3,"BackoffRate":2}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - CheckMatchExistenceLambda17FD01AF
                - Arn
            - '","Payload.$":"$"}},"DoesMatchExistChoice":{"Type":"Choice","Choices":[{"Variable":"$.doesMatchExist","BooleanEquals":false,"Next":"FetchMatchAndInsertInvocation"}]},"FetchMatchAndInsertInvocation":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"IntervalSeconds":10,"MaxAttempts":3,"BackoffRate":2}],"Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - FetchAndInsertMatchDataLambda39A2EA66
                - Arn
            - '","Payload.$":"$"}}}}'
      RoleArn:
        Fn::GetAtt:
          - MatchSourceStateMachineRoleD09F75E7
          - Arn
    DependsOn:
      - MatchSourceStateMachineRoleDefaultPolicy6394FA99
      - MatchSourceStateMachineRoleD09F75E7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MatchSourceStateMachine/Resource
  MatchSourceStateMachineTriggerLambdaServiceRole64F75D7E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MatchSourceStateMachineTriggerLambda/ServiceRole/Resource
  MatchSourceStateMachineTriggerLambdaServiceRoleDefaultPolicy68F51107:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:ChangeMessageVisibility
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - MatchIdProcessingQueueD3932FF5
                - Arn
          - Action: states:StartExecution
            Effect: Allow
            Resource:
              Ref: MatchSourceStateMachine95C9A812
        Version: "2012-10-17"
      PolicyName: MatchSourceStateMachineTriggerLambdaServiceRoleDefaultPolicy68F51107
      Roles:
        - Ref: MatchSourceStateMachineTriggerLambdaServiceRole64F75D7E
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MatchSourceStateMachineTriggerLambda/ServiceRole/DefaultPolicy/Resource
  MatchSourceStateMachineTriggerLambdaSecurityGroupAE7FE3DB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function BakeryLeaderboardStackMatchSourceStateMachineTriggerLambda2A922CA8
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyVpcF9F0CA6F
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MatchSourceStateMachineTriggerLambda/SecurityGroup/Resource
  MatchSourceStateMachineTriggerLambda75065333:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-789658303834-us-east-2
        S3Key: dbf73cba479d9d7fb010f1e515d444e3557647b86ed65d46b3d1cb0a290fa92b.zip
      Environment:
        Variables:
          STATE_MACHINE_ARN:
            Ref: MatchSourceStateMachine95C9A812
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          NODE_ENV: development
      Handler: index.handler
      ReservedConcurrentExecutions: 200
      Role:
        Fn::GetAtt:
          - MatchSourceStateMachineTriggerLambdaServiceRole64F75D7E
          - Arn
      Runtime: nodejs18.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - MatchSourceStateMachineTriggerLambdaSecurityGroupAE7FE3DB
              - GroupId
        SubnetIds:
          - Ref: MyVpcPrivateSubnet1Subnet5057CF7E
          - Ref: MyVpcPrivateSubnet2Subnet0040C983
          - Ref: MyVpcPrivateSubnet3Subnet772D6AD7
    DependsOn:
      - MatchSourceStateMachineTriggerLambdaServiceRoleDefaultPolicy68F51107
      - MatchSourceStateMachineTriggerLambdaServiceRole64F75D7E
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MatchSourceStateMachineTriggerLambda/Resource
      aws:asset:path: asset.dbf73cba479d9d7fb010f1e515d444e3557647b86ed65d46b3d1cb0a290fa92b
      aws:asset:is-bundled: true
      aws:asset:property: Code
  MatchSourceStateMachineTriggerLambdaSqsEventSourceBakeryLeaderboardStackMatchIdProcessingQueueCF2189E8E066490E:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn:
        Fn::GetAtt:
          - MatchIdProcessingQueueD3932FF5
          - Arn
      FunctionName:
        Ref: MatchSourceStateMachineTriggerLambda75065333
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/MatchSourceStateMachineTriggerLambda/SqsEventSource:BakeryLeaderboardStackMatchIdProcessingQueueCF2189E8/Resource
  SyncSummonerStatsLambdaServiceRoleFCBA71AA:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SyncSummonerStatsLambda/ServiceRole/Resource
  SyncSummonerStatsLambdaServiceRoleDefaultPolicy6C2A41E9:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              - Ref: BakeryLeaderboardDatabaseSecretAttachment2E68FFA9
              - Ref: RiotApiSecret70E7C139
        Version: "2012-10-17"
      PolicyName: SyncSummonerStatsLambdaServiceRoleDefaultPolicy6C2A41E9
      Roles:
        - Ref: SyncSummonerStatsLambdaServiceRoleFCBA71AA
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SyncSummonerStatsLambda/ServiceRole/DefaultPolicy/Resource
  SyncSummonerStatsLambdaSecurityGroupE0C0B440:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function BakeryLeaderboardStackSyncSummonerStatsLambdaF249201C
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyVpcF9F0CA6F
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SyncSummonerStatsLambda/SecurityGroup/Resource
  SyncSummonerStatsLambda5210D915:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-789658303834-us-east-2
        S3Key: 0c285405c6b57f99366eaa3e336210bc3e19f57aebc5bb2957fcc89028207696.zip
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          RIOT_API_SECRET:
            Ref: RiotApiSecret70E7C139
          DB_SECRET:
            Ref: BakeryLeaderboardDatabaseSecretAttachment2E68FFA9
          NODE_ENV: development
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - SyncSummonerStatsLambdaServiceRoleFCBA71AA
          - Arn
      Runtime: nodejs18.x
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - SyncSummonerStatsLambdaSecurityGroupE0C0B440
              - GroupId
        SubnetIds:
          - Ref: MyVpcPrivateSubnet1Subnet5057CF7E
          - Ref: MyVpcPrivateSubnet2Subnet0040C983
          - Ref: MyVpcPrivateSubnet3Subnet772D6AD7
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
      - SyncSummonerStatsLambdaServiceRoleDefaultPolicy6C2A41E9
      - SyncSummonerStatsLambdaServiceRoleFCBA71AA
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SyncSummonerStatsLambda/Resource
      aws:asset:path: asset.0c285405c6b57f99366eaa3e336210bc3e19f57aebc5bb2957fcc89028207696
      aws:asset:is-bundled: true
      aws:asset:property: Code
  SyncSummonerStatsFromScratchLambdaServiceRole0CA6C4FE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SyncSummonerStatsFromScratchLambda/ServiceRole/Resource
  SyncSummonerStatsFromScratchLambdaServiceRoleDefaultPolicy754983AB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              - Ref: BakeryLeaderboardDatabaseSecretAttachment2E68FFA9
              - Ref: RiotApiSecret70E7C139
        Version: "2012-10-17"
      PolicyName: SyncSummonerStatsFromScratchLambdaServiceRoleDefaultPolicy754983AB
      Roles:
        - Ref: SyncSummonerStatsFromScratchLambdaServiceRole0CA6C4FE
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SyncSummonerStatsFromScratchLambda/ServiceRole/DefaultPolicy/Resource
  SyncSummonerStatsFromScratchLambdaSecurityGroupE28C328B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function BakeryLeaderboardStackSyncSummonerStatsFromScratchLambda59A6E215
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyVpcF9F0CA6F
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SyncSummonerStatsFromScratchLambda/SecurityGroup/Resource
  SyncSummonerStatsFromScratchLambda8196691C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-789658303834-us-east-2
        S3Key: 666ed3c066110652898fe17fcef19f2e69a02ed98203dba7fe667f6aef16da18.zip
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
          RIOT_API_SECRET:
            Ref: RiotApiSecret70E7C139
          DB_SECRET:
            Ref: BakeryLeaderboardDatabaseSecretAttachment2E68FFA9
          NODE_ENV: development
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - SyncSummonerStatsFromScratchLambdaServiceRole0CA6C4FE
          - Arn
      Runtime: nodejs18.x
      Timeout: 15
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - SyncSummonerStatsFromScratchLambdaSecurityGroupE28C328B
              - GroupId
        SubnetIds:
          - Ref: MyVpcPrivateSubnet1Subnet5057CF7E
          - Ref: MyVpcPrivateSubnet2Subnet0040C983
          - Ref: MyVpcPrivateSubnet3Subnet772D6AD7
    DependsOn:
      - MyVpcPrivateSubnet1DefaultRouteA8CDE2FA
      - MyVpcPrivateSubnet1RouteTableAssociation56D38C7E
      - MyVpcPrivateSubnet2DefaultRoute9CE96294
      - MyVpcPrivateSubnet2RouteTableAssociation86A610DA
      - MyVpcPrivateSubnet3DefaultRouteEC11C0C5
      - MyVpcPrivateSubnet3RouteTableAssociationD951741C
      - SyncSummonerStatsFromScratchLambdaServiceRoleDefaultPolicy754983AB
      - SyncSummonerStatsFromScratchLambdaServiceRole0CA6C4FE
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SyncSummonerStatsFromScratchLambda/Resource
      aws:asset:path: asset.666ed3c066110652898fe17fcef19f2e69a02ed98203dba7fe667f6aef16da18
      aws:asset:is-bundled: true
      aws:asset:property: Code
  SourceMatchesEventBD103A76:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(30 minutes)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - SourceMatchesLambda341ADEAE
              - Arn
          Id: Target0
          Input: '{"type":"INTERVAL","interval":{"hours":2}}'
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SourceMatchesEvent/Resource
  SourceMatchesEventAllowEventRuleBakeryLeaderboardStackSourceMatchesLambda12AA76488526FB47:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - SourceMatchesLambda341ADEAE
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - SourceMatchesEventBD103A76
          - Arn
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/SourceMatchesEvent/AllowEventRuleBakeryLeaderboardStackSourceMatchesLambda12AA7648
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31UTW/bMAz9LbsrWtIeums+uiJYV3hJ0R0DWmYSxbbkiVKKwPB/Hy07sTsUO/GReqLIR9p3cjadyukXeKeJyvJJoVNZbz2oXHBoVxMqh55KMHBAx0fRF8u96VFnXsEd0M89XzyWaEaEf08aoWyGadBFJutEV1hog4mzJ1TxVg8boaGU9cYW2EajTWyh1SWSbmhtyINRbYa9LrDLXvVphwfipRH+jenR2rwReUmy/oExV2vmhQZqnQgaQfeyXgSVdz33qDNDER/8zlkAcTGo7mT9VqmW9JYsRRJS5mxDanoNb2hjg8dXSLt2u/gQmxNZpcFra27kFjyuk9a8gH8Cj+9wEYnTZ4ZD4rXx6BhfCV0lvTcaGE8rOO0vT86Gqh/ffwJrc3BIJK76j2fRCJexqivwkLIMyyIQ1yC6mm7pVotx4Eoe9mu1uF6MzpC8gDLNYGd40CeSL9F8D0ZFdeh+B0S8sXLemp4sa85x4zyeueGtDU7hT6gqbQ5Ry0+jCbpSE/E13oU/3NWvgCF2GwEHPVb7PjPtPFBO8jk+ujZnm+NHAhdytJrl4k/M8zvq2C/k2Oe9aWth8ib068+2acQGKdYnliyMLQeXGZ8f8Wdx1hlrGNXgRw7XvsBBiaxuI1oh5Ym+nmff5OyB/wUn0nrigvG6RLnp7F8kMA4wKAQAAA==
    Metadata:
      aws:cdk:path: BakeryLeaderboardStack/CDKMetadata/Default
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

